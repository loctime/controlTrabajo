rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Función helper para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función helper para verificar si es el propietario
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Función helper para verificar si el usuario es admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'admin';
    }
    
    // Reglas para la colección de usuarios
    match /users/{userId} {
      // Cualquier usuario autenticado puede leer información de usuarios
      allow read: if isAuthenticated();
      
      // Solo el propio usuario puede crear su documento (durante registro)
      allow create: if isOwner(userId) && request.resource.data.rol == 'user';
      
      // Solo el propio usuario o un admin puede actualizar
      allow update: if isOwner(userId) || isAdmin();
      
      // Solo admins pueden eliminar usuarios
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección de CVs
    match /cv/{cvId} {
      // Lectura: usuarios autenticados pueden ver CVs aprobados o sus propios CVs
      allow read: if isAuthenticated() && 
                     (resource.data.estado == 'aprobado' || 
                      resource.data.uid == request.auth.uid ||
                      isAdmin());
      
      // Creación: usuarios autenticados pueden crear su propio CV
      allow create: if isAuthenticated() && 
                       request.resource.data.uid == request.auth.uid &&
                       request.resource.data.estado == 'pendiente';
      
      // Actualización: el propietario puede actualizar su CV o un admin
      allow update: if isAuthenticated() && 
                       (isOwner(resource.data.uid) || isAdmin());
      
      // Eliminación: solo admins o el propio usuario pueden eliminar
      allow delete: if isAuthenticated() && 
                       (isOwner(resource.data.uid) || isAdmin());
    }
    
    // Bloquear acceso a cualquier otra colección no definida
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

